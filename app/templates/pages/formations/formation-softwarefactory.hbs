---
layout: formation.hbs
title: Formation usine logicielle
icon: icon-lt_training
subtitle: Nous aimons construire des applications modernes en tirant parti des technos les plus adaptées et nous sommes ravis de le partager.
name: Usine logicielle
---
    <div class="row">
        <div class="col-md-8 col-lg-9">
            <h2>Formation : {{ name }}</h2>

            <div class="training-section">
                <h3 class="section-title"><span class="title-text">Objectifs</span></h3>
                <ul>
                    <li>Automatiser le cycle de vie d'un produit</li>
                    <li>Améliorer la testabilité</li>
                    <li>Mesurer la qualité</li>
                    <li>Déployer en continu</li>
                </ul>
            </div>

            <div class="training-section">
                <h3 class="section-title"><span class="title-text">Méthode pédagogique</span></h3>
                <p>Les participants auront à leur disposition un projet Java qu'ils auront à intégrer au sein d'une usine logicielle de façon itérative</p>
                <p>Chaque projet fera l’objet d’une itération de 2H :</p>
                <ul>
                    <li>20 min de présentation de l’itération : présentation de l’exercice et des concepts à utiliser.</li>
                    <li>1h20 de pratique.</li>
                    <li>20 min de rétrospective : présentation par les participants des difficultés rencontrées et de leur résolutions. </li>
                </ul>
            </div>

            <div class="training-section agenda">
                <h3 class="section-title"><span class="title-text">Au programme</span></h3>
                <h4 class="agenda-title">Les outils de build automatisé</h4>
                convention over configuration <br/>
                La standardisation, un exemple avec maven<br/>
                les causes d’échec d’adoption de maven<br/>

                <h4 class="agenda-title">Maven : Les fondamentaux</h4>
                cycle de vie<br/>
                le fichier pom.xml<br/>
                le packaging<br/>
                le fichier settings.xml<br/>
                les modules<br/>
                la gestion des ressources (et le filtrage)<br/>
                les profils<br/>

                <h4 class="agenda-title">Repository et artefact</h4>
                le repo local et le repo distant<br/>
                l’artefact<br/>
                présentation d’un repo d’entreprise : nexus<br/>
                mettre en place nexus<br/>
                brancher nexus sur ldap<br/>
                mettre en place des proxy vers les repos externes<br/>
                les virtual groups<br/>
                la maintenance des snapshots (job de purge)<br/>
                le plugin maven deploy pour stocker vos artefacts<br/>
                le plugin maven release pour stocker vos artefacts, gérer leur version et s’intégrer avec votre gestionnaire de source<br/>
                trouver un artefact sur mvnrepository et mvnbrowser<br/>


                <h4 class="agenda-title">Gérer ses dépendances</h4>
                la mauvaise gestion des dépendances, une cause d’échec de l’utilisation de maven<br/>
                la transitivité<br/>
                les scopes<br/>
                la centralisation des versions (dependencymanagement et pluginmanagement)<br/>
                le plugin dependency ou comment maintenir vos dépendances<br/>
                les bonnes pratiques<br/>

                <h4 class="agenda-title">Les tests</h4>
                les différents type de test<br/>
                le plugin surefire et les différents mode de fork<br/>
                le plugin failsafe<br/>
                le debugging<br/>
                les tests évolué avec soapui, jmeter et gatling<br/>

                <h4 class="agenda-title">Optimiser votre temps de build</h4>
                Un principe, gardez votre temps de build unitaire &lt; 10 min maximum<br/>
                le build incrémental<br/>
                la parralélisation des tests<br/>
                le build différentiel et jenkins/bamboo, ou comment ne pas relancer les projets de génération de code systématiquement<br/>
                lancer le packaging sur un build à part<br/>
                attention à la surmodularisation<br/>

                <h4 class="agenda-title">Automatisez votre build (jenkins ou bamboo)</h4>
                mise en place<br/>
                gestion des autorisations<br/>
                les plugins vitaux<br/>
                les notifications<br/>
                la release <br/>
                le reporting<br/>
                le build distribué<br/>
                les tâches pré et post builds<br/>

                <h4 class="agenda-title">les plugins</h4>
                le plugin tomcat et son mode debug<br/>
                le plugin jaxws<br/>
                le plugin jaxb<br/>
                faire son propre plugin<br/>


                <h4 class="agenda-title">L'intégration avec l'IDE</h4>
                les différents modes : lancement de commande externe vs plugin<br/>
                les limitations<br/>

                <h4 class="agenda-title">le reporting</h4>
                le plugin site<br/>
                les plugins de qualimétrie (checkstyle, pmd/cpd, findbugs)<br/>
                comment rassurer vos managers en leur donnant des métriques<br/>
                mise en place de sonar <br/>
                quelques widgets sonar<br/>
                la mise en place de la couverture de code avec jacoco<br/>

                <h4 class="agenda-title">Déployer en continu</h4>
                Le plugin ssh<br/>
                Rundeck et le plugin rundeck<br/>
                Autres approches<br/>
            </div>
        </div>


        <aside class="col-md-4 col-lg-3">
            <div class="sidebox training-info">
                <img src="images/formations/java.jpg" class="training-picture"/>
                <h3 class="info-title"">Prix</h3>
                <p><small>(inter entreprises)</small></p>
                <span class="price-tag"><span class="price">2490€ HT</span> / personne</span>

                <h3 class="info-title">Durée</h3>
                <p class="duration">5 jours</p>

                <a href="#form-contact" class="btn btn-large btn-primary">Demander un devis</a>
                <hr>

                <h3 class="info-title">Audience</h3>
                <p>Equipes de développement qui gèrent leur usine logicielle et souhaitent construire du logiciel de qualité</p>
                <p>Niveau: Avancé</p>
                <hr>

                <h3 class="info-title">Pré-requis</h3>
                <p>Une connaissance du language Java est nécessaire</p>
                <hr>

                <h3 class="info-title">Formateurs</h3>
                <div class="row">
                <div class="col-md-6 person">
                    <img src="/images/membres/hugo.jpg" class="person-picture">
                    <h2 class="person-title">Hugo Lassiège</h2>
                    <div class="person-share">
                        <a href="https://www.twitter.com/hugolassiege" title="@hugolassiege"><i class="fa fa-twitter"></i></a>
                        <a href="https://github.com/hlassiege" title="hlassiege@github"><i class="fa fa-github"></i></a>
                    </div>
                </div>
                <div class="col-md-6 person">
                    <img src="/images/membres/liliansauvigne.jpg" class="person-picture">
                    <h2 class="person-title">Lilians Auvigne</h2>
                    <div class="person-share">
                        <a href="https://twitter.com/lauvigne" title="@lauvigne"><i class="fa fa-twitter"></i></a>
                        <a href="https://github.com/lauvigne" title="lauvigne@github"><i class="fa fa-github"></i></a>
                    </div>
                </div>
                </div>
            </div>
        </aside>
    </div>
